from __future__ import print_function
from tkinter import ttk
from ttkthemes import ThemedTk
from tkinter import *
from gcsa.google_calendar import GoogleCalendar
from google_auth_oauthlib.flow import InstalledAppFlow
from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials
import os.path
import datetime
from googleapiclient.discovery import build

#google calendar code
def clicked():
    calendar = GoogleCalendar('1039522km@gmail.com')
    for event in calendar:
        print(event)
SCOPES = ['https://www.googleapis.com/auth/calendar']

def main():
    """Shows basic usage of the Google Calendar API.
    Prints the start and name of the next 10 events on the user's calendar.
    """
    creds = None
    # The file token.json stores the user's access and refresh tokens, and is
    # created automatically when the authorization flow completes for the first
    # time.
    if os.path.exists('token.json'):
        creds = Credentials.from_authorized_user_file('token.json', SCOPES)
    # If there are no (valid) credentials available, let the user log in.
    if not creds or not creds.valid:
        if creds and creds.expired and creds.refresh_token:
            creds.refresh(Request())
        else:
            flow = InstalledAppFlow.from_client_secrets_file(
                'credentials.json', SCOPES)
            creds = flow.run_local_server(port=0)
        # Save the credentials for the next run
        with open('token.json', 'w') as token:
            token.write(creds.to_json())

    def service(): build('calendar', 'v3', credentials=creds)

# Call the Calendar API
    now = datetime.datetime.utcnow().isoformat() + 'Z' # 'Z' indicates UTC time
    print('Getting the upcoming 10 events')
    events_result = service.events().list(calendarId='primary', timeMin=now,
                                        maxResults=10, singleEvents=True,
                                        orderBy='startTime').execute()
    events = events_result.get('items', [])

    if not events:
        print('No upcoming events found.')
    for event in events:
        start = event['start'].get('dateTime', event['start'].get('date'))
        print(start, event['summary'])

def service(): main()

def click():
    event = {
        'summary': 'Google I/O 2015',
        'location': '800 Howard St., San Francisco, CA 94103',
        'description': 'A chance to hear more about Google\'s developer products.',
        'start': {
            'dateTime': '2015-05-28T09:00:00-07:00',
            'timeZone': 'America/Los_Angeles',
        },
        'end': {
            'dateTime': '2015-05-28T17:00:00-07:00',
            'timeZone': 'America/Los_Angeles',
        },
        'recurrence': [
            'RRULE:FREQ=DAILY;COUNT=2'
        ],
        'attendees': [
            {'email': 'lpage@example.com'},
            {'email': 'sbrin@example.com'},
        ],
        'reminders': {
            'useDefault': False,
            'overrides': [
                {'method': 'email', 'minutes': 24 * 60},
                {'method': 'popup', 'minutes': 10},
            ],
        },
    }
    event = service.events().insert(calendarId='primary', body=event).execute()

# create the window for the GUI and add a title
window = ThemedTk(theme="equilux")
window.config(themebg="equilux")
window.title("3D Printer Scheduler")
window.geometry('300x320')

"""viewButton = ttk.Button(window, text="View Database", command=seeData)
addButton = ttk.Button(window, text="Add Database", command=addData)"""

nameLabel = ttk.Label(window, text="Name: Student ")
snumberLabel = ttk.Label(window, text="S-number: s1039522")

labelTop = ttk.Label(window, text="Choose a Date", )
comboexample = ttk.Combobox(window,
                            values=["October", "November", "December"], state="readonly")

comboexample.current(1)
print(comboexample.current(), comboexample.get())

submitButton = ttk.Button(window, text="Submit", command=click)
viewButton = ttk.Button(window, text="View Calendar", command=clicked)
# add labels and text entry/buttons to GUI
nameLabel.pack()
snumberLabel.pack()
labelTop.pack()
comboexample.pack()
submitButton.pack(side=LEFT)
viewButton.pack(side=RIGHT)


window.mainloop()


